server.port=8082
spring.application.name=Sale-Catalog-Service

spring.redis.host=redis
spring.redis.port=6379

# Debugging on
spring.output.ansi.enabled=always
logging.level.kr.co.directdeal.sale.catalogservice=debug

#JWT Configuration
jwt.header=Authorization
jwt.secret=L2RpcmVjdC1kZWFsL2RpcmVjdC1kZWFsLWFjY291bnQtc2VydmljZS9kaXJlY3QtZGVhbC9kaXJlY3QtZGVhbC1hY2NvdW50LXNlcnZpY2UvZGlyZWN0LWRlYWwvZGlyZWN0LWRlYWwtYWNjb3VudC1zZXJ2aWNlL2RpcmVjdC1kZWFsL2RpcmVjdC1kZWFsLWFjY291bnQtc2VydmljZQo=
jwt.access-token-validity-in-seconds=3600
jwt.refresh-token-validity-in-seconds=2592000

#lift-up Configuration for catalog service
direct.deal.sale.catalog.liftup.interval.day=3

spring.jackson.serialization.write-dates-as-timestamps=false

# We look for Axon Server locally, unless we find a PCF Binding for AxonServer
#axon.axonserver.enabled=false
#axon.axonserver.servers=${vcap.services.AxonServer.credentials.uri:localhost}

axon.kafka.bootstrap-servers=kafka:9092
#axon.kafka.client-id=sale-item-consumer-${random.int}
axon.kafka.client-id=sale-catalog-service-consumer-${random.int}
axon.kafka.default-topic=local.event
axon.kafka.properties.security.protocol=PLAINTEXT

#axon.kafka.publisher.confirmation-mode=transactional

#axon.kafka.producer.transaction-id-prefix=kafka-sample
#axon.kafka.producer.retries=0
#axon.kafka.producer.event-processor-mode=subscribing

axon.kafka.fetcher.poll-timeout=3000

#axon.kafka.consumer.bootstrap-servers=localhost:9092
#axon.kafka.consumer.client-id=kafka-axon-example2
axon.kafka.consumer.enable-auto-commit=true
axon.kafka.consumer.auto-commit-interval=3000
axon.kafka.consumer.event-processor-mode=tracking

axon.eventhandling.processors.saleItem.source=streamableKafkaMessageSource
axon.eventhandling.processors.saleItem.mode=TRACKING
axon.eventhandling.processors.saleItem.thread-count=1
axon.eventhandling.processors.saleItem.batch-size=1
#axon.eventhandling.processors.mode=tracking
#axon.eventhandling.processors.source=eventBus

axon.serializer.general=xstream
axon.serializer.events=xstream
axon.serializer.messages=xstream

#spring.redis.password=

#security.basic.enabled=false 

#spring.data.mongodb.uri=mongodb://root:root@localhost:27017
#spring.data.mongodb.uri=mongodb://user:user@localhost:27017
spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.host=localhost
spring.data.mongodb.host=mongo
spring.data.mongodb.port=27017
spring.data.mongodb.username=root
spring.data.mongodb.password=secret
spring.data.mongodb.database=SALE_CATALOG_SERVICE_DB

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql:3306/DIRECT-DEAL-SALE-CATALOG-DB?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=direct-deal-sale-catalog
spring.datasource.password=secret

spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#spring.h2.console.enabled=true
#
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem://localhost/~/testdb;MODE=MySQL;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=FALSE
#spring.datasource.username=sa
#spring.datasource.password=
#
#spring.jpa.open-in-view=false
#spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=create-drop
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

# spring.output.ansi.enabled=always
# logging.file.path=.
logging.level.kr.co.directdeal=DEBUG

management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true