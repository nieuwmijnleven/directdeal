server.port=8081
spring.application.name=Sale-Service

# Debugging on
spring.output.ansi.enabled=always
logging.level.kr.co.directdeal.saleservice=debug

jwt.header=Authorization
jwt.secret=L2RpcmVjdC1kZWFsL2RpcmVjdC1kZWFsLWFjY291bnQtc2VydmljZS9kaXJlY3QtZGVhbC9kaXJlY3QtZGVhbC1hY2NvdW50LXNlcnZpY2UvZGlyZWN0LWRlYWwvZGlyZWN0LWRlYWwtYWNjb3VudC1zZXJ2aWNlL2RpcmVjdC1kZWFsL2RpcmVjdC1kZWFsLWFjY291bnQtc2VydmljZQo=
jwt.access-token-validity-in-seconds=3600
jwt.refresh-token-validity-in-seconds=2592000

# We look for Axon Server locally, unless we find a PCF Binding for AxonServer
#axon.axonserver.enabled=false
#axon.axonserver.servers=${vcap.services.AxonServer.credentials.uri:localhost}

axon.kafka.bootstrap-servers=kafka:9092
axon.kafka.client-id=sale-service-producer-${random.int}
axon.kafka.default-topic=local.event
axon.kafka.properties.security.protocol=PLAINTEXT
axon.kafka.publisher.confirmation-mode=transactional

axon.kafka.producer.retries=2
axon.kafka.producer.transaction-id-prefix=sale-service
axon.kafka.producer.event-processor-mode=subscribing

axon.serializer.general=xstream
axon.serializer.events=xstream
axon.serializer.messages=xstream

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql:3306/DIRECT-DEAL-SALE-DB?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=direct-deal-sale
spring.datasource.password=secret

spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#spring.h2.console.enabled=true

#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem://localhost/~/testdb;MODE=MySQL;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=FALSE
#spring.datasource.username=sa
#spring.datasource.password=

#spring.jpa.open-in-view=false
#spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

#spring.data.mongodb.uri=mongodb://user:user@localhost:27017
spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27018
spring.data.mongodb.host=mongo
spring.data.mongodb.port=27017
spring.data.mongodb.username=root
spring.data.mongodb.password=secret
spring.data.mongodb.database=SALE_SERVICE_DB

#management.server.port=9000
#management.endpoints.web.base-path=/
#management.endpoints.enabled-by-default=true
#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=env,beans

spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=0
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.resolve-lazily=false

#spring.task.execution.pool.core-size=50
#spring.task.execution.pool.max-size=200
#spring.task.execution.pool.queue-capacity=100
#spring.task.execution.shutdown.await-termination=true
#spring.task.execution.shutdown.await-termination-period=10s
#spring.task.execution.thread-name-prefix=async-task-exec-