apiVersion: v1
kind: Service
metadata:
  name: sale-catalog-service
  # namespace: default
  labels:
    app: sale-catalog-service
spec:
  ports:
  - name: httpport
    port: 8082
    protocol: TCP
    targetPort: 8082
  selector:
    app: sale-catalog-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sale-catalog-service
  # namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sale-catalog-service
      version: 'v1'
  # strategy:
  #   rollingUpdate:
  #     maxUnavailable: 0
  template:
    metadata:
      labels:
        app: sale-catalog-service
        version: 'v1'
    spec:
#      initContainers:
#      - name: init-ds
#        image: directdeal-registry.localhost:5000/busybox:latest
#        command:
#          - '/bin/sh'
#          - '-c'
#          - |
#            while true
#            do
#              rt=$(nc -z -w 1 mysql 3306 && nc -z -w 1 mongo 27017 && nc -z -w 1 kafka 9092)
#              if [ $? -eq 0 ]; then
#                echo "DB is UP"
#                break
#              fi
#              echo "DB is not yet reachable;sleep for 10s before retry"
#              sleep 10
#            done
      containers:
      - name: sale-catalog-service
        image: directdeal-registry.localhost:5000/direct-deal-sale-catalog-service-webflux
        imagePullPolicy: Always
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "dev"
        - name: PROJECT_ID
          value: "${PROJECT_ID}"
        ports:
        - containerPort: 8082
          name: httpport
        # resources:
        #     # requests:
        #     #   memory: '512Mi'
        #     #   cpu: '500m'
        #     limits:
        #       memory: '512Mi'
        #       # cpu: '100m'
        # livenessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: 8082
        #   initialDelaySeconds: 120
        #   periodSeconds: 20
        #   failureThreshold: 10
        # readinessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: 8082
        #   initialDelaySeconds: 120
        #   periodSeconds: 20
        #   failureThreshold: 10
---
