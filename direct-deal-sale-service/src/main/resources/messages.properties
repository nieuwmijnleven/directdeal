saleservice.exception.favoriteitemservice.delete.message=User({0}) does not have the item({1})

saleservice.exception.itemcategoryservice.insert.message=Category id({0}) is not found
saleservice.exception.itemcategoryservice.update.message=Category id({0}) is not found
saleservice.exception.itemcategoryservice.delete.message=Category id({0}) is not found

saleservice.exception.itemimageservice.readimage.fail.message=Failed to read the image({0})
saleservice.exception.itemimageservice.saveimage.fail.message=Threre is no item images to save
saleservice.exception.itemimageservice.checkuploadstatus.notfound.message=image({0}) is not found
saleservice.exception.itemimageservice.saveimages.cannotcreatedirectory.message=Could not create the image repository directory({0})
saleservice.exception.itemimageservice.saveimages.cannotloadImage.message=Could not load a image({0})


saleservice.exception.saleitemaggregate.itemupdatecommand.notthesame.onwerid.message=User({0}) is not the same as seller({1})

saleservice.exception.itemcontroller.register.notthesame.onwerid.message=User({0}) is not the same as seller({1})


#account.constraint.name.size.message=The account name '${validatedValue}' must be between {min} and {max} characters long
#account.constraint.password.size.message=The pasword must be between {min} and {max} characters long
#account.exception.get.message=Failed to find the account({0})
#account.exception.insert.email.message=The email({0}) is already used
#account.exception.update.id.message=Failed to update the account({0})
#account.exception.update.email.message=The email({0}) is already used
#account.exception.delete.message=Failed to delete the account({0})
#account.exception.changepassword.samepasswords.message=The new password is the same as the current password
#account.exception.changepassword.accountnotfound.message=Failed to find the account({0})
#account.exception.changepassword.passwordmismatch.message=Incorrect password
#accountdetailservice.exception.loaduserbyusername.accountnotfound.message=could not find the account({0})