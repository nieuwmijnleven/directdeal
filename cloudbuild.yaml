steps:
# 1. Execute Gradle build
- name: 'gradle:jdk11'  # Gradle 빌드용 이미지 (필요에 따라 변경 가능)
  id: 'build-gradle'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      ./gradlew clean build
      ./gradlew clean build -p direct-deal-gateway

# 2. Docker image build and tag (each service in multiple steps)
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build-account-service'
  args:
    [
      'build', '-t', 'gcr.io/$PROJECT_ID/direct-deal-account-service', './direct-deal-account-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-tag-account-service'
  args:
    [
      'tag', 'gcr.io/$PROJECT_ID/direct-deal-account-service', 'gcr.io/$PROJECT_ID/direct-deal-account-service'
    ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build-sale-service'
  args:
    [
      'build', '-t', 'gcr.io/$PROJECT_ID/direct-deal-sale-service', './direct-deal-sale-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-tag-sale-service'
  args:
    [
      'tag', 'gcr.io/$PROJECT_ID/direct-deal-sale-service', 'gcr.io/$PROJECT_ID/direct-deal-sale-service'
    ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build-sale-catalog-service-webflux'
  args:
    [
      'build', '-t', 'gcr.io/$PROJECT_ID/direct-deal-sale-catalog-service-webflux', './direct-deal-sale-catalog-service-webflux'
    ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-tag-sale-catalog-service-webflux'
  args:
    [
      'tag', 'gcr.io/$PROJECT_ID/direct-deal-sale-catalog-service-webflux', 'gcr.io/$PROJECT_ID/direct-deal-sale-catalog-service-webflux'
    ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build-transaction-history-service'
  args:
    [
      'build', '-t', 'gcr.io/$PROJECT_ID/direct-deal-transaction-history-service', './direct-deal-transaction-history-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-tag-transaction-history-service'
  args:
    [
      'tag', 'gcr.io/$PROJECT_ID/direct-deal-transaction-history-service', 'gcr.io/$PROJECT_ID/direct-deal-transaction-history-service'
    ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build-chatting-service'
  args:
    [
      'build', '-t', 'gcr.io/$PROJECT_ID/direct-deal-chatting-service', './direct-deal-chatting-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-tag-chatting-service'
  args:
    [
      'tag', 'gcr.io/$PROJECT_ID/direct-deal-chatting-service', 'gcr.io/$PROJECT_ID/direct-deal-chatting-service'
    ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build-gateway'
  args:
    [
      'build', '-t', 'gcr.io/$PROJECT_ID/direct-deal-gateway', './direct-deal-gateway'
    ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-tag-gateway'
  args:
    [
      'tag', 'gcr.io/$PROJECT_ID/direct-deal-gateway', 'gcr.io/$PROJECT_ID/direct-deal-gateway'
    ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build-mysql'
  args:
    [
      'build', '-t', 'gcr.io/$PROJECT_ID/direct-deal-mysql', './mysql'
    ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-tag-mysql'
  args:
    [
      'tag', 'gcr.io/$PROJECT_ID/direct-deal-mysql', 'gcr.io/$PROJECT_ID/direct-deal-mysql'
    ]

# 3. Push images to the registry
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-push-all'
  args:
    [
      'push', 'gcr.io/$PROJECT_ID/direct-deal-account-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push', 'gcr.io/$PROJECT_ID/direct-deal-sale-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push', 'gcr.io/$PROJECT_ID/direct-deal-sale-catalog-service-webflux'
    ]
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push', 'gcr.io/$PROJECT_ID/direct-deal-transaction-history-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push', 'gcr.io/$PROJECT_ID/direct-deal-chatting-service'
    ]
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push', 'gcr.io/$PROJECT_ID/direct-deal-gateway'
    ]
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push', 'gcr.io/$PROJECT_ID/direct-deal-mysql'
    ]

# 4. Deploy to Cloud Run for each service
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'cloud-run-deploy-account-service'
  args:
    [
      'run', 'deploy', 'direct-deal-account-service',
      '--image', 'gcr.io/$PROJECT_ID/direct-deal-account-service',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'cloud-run-deploy-sale-service'
  args:
    [
      'run', 'deploy', 'direct-deal-sale-service',
      '--image', 'gcr.io/$PROJECT_ID/direct-deal-sale-service',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'cloud-run-deploy-sale-catalog-service-webflux'
  args:
    [
      'run', 'deploy', 'direct-deal-sale-catalog-service-webflux',
      '--image', 'gcr.io/$PROJECT_ID/direct-deal-sale-catalog-service-webflux',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'cloud-run-deploy-transaction-history-service'
  args:
    [
      'run', 'deploy', 'direct-deal-transaction-history-service',
      '--image', 'gcr.io/$PROJECT_ID/direct-deal-transaction-history-service',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'cloud-run-deploy-chatting-service'
  args:
    [
      'run', 'deploy', 'direct-deal-chatting-service',
      '--image', 'gcr.io/$PROJECT_ID/direct-deal-chatting-service',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'cloud-run-deploy-gateway'
  args:
    [
      'run', 'deploy', 'direct-deal-gateway',
      '--image', 'gcr.io/$PROJECT_ID/direct-deal-gateway',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'cloud-run-deploy-mysql'
  args:
    [
      'run', 'deploy', 'direct-deal-mysql',
      '--image', 'gcr.io/$PROJECT_ID/direct-deal-mysql',
      '--region', 'europe-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]


timeout: '1200s'  # Maximum build timeout set to 30 minutes

options:
  logging: CLOUD_LOGGING_ONLY